{"version":3,"sources":["Components/Technologies.jsx","App.js","serviceWorker.js","index.js"],"names":["Technologies","react_default","a","createElement","className","style","textAlign","react_typed_default","strings","typeSpeed","backSpeed","backDelay","loop","display","href","src","class","Component","particlesOpt","particles","number","value","density","enable","value_area","App","color","react_router_dom","to","exact","particles_default","params","justifyContent","backgroundColor","height","alignItems","Technologies_Technologies","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3153a912.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Typed from \"react-typed\";\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default class Technologies extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"techContainer\">\n          <div className=\"type\">\n            <div>\n              <h3 style={{textAlign:\"center\"}}>Hi, my name is Kenneth Solano</h3>\n            </div>\n            <div>\n              {\" \"}\n              <h2 style={{ textAlign: \"center\" }}>\n                I am{\" \"}\n                <Typed\n                  strings={[\"a developer\", \"a problem-solver\", \"a dog lover\"]}\n                  typeSpeed={120}\n                  backSpeed={75}\n                  backDelay={1000}\n                  // style={{ color: \"red\" }}\n                  loop\n                />\n              </h2>\n            </div>\n            <div className=\"firstIcons\" style={{display:\"flex\"}}>\n            {/* <div         style={{\n          backgroundImage: \"url(./images/github.png)\",\n          backgroundSize: \"cover\",\n        //   height: \"129vh\",\n          width: \"5vw\",\n          height:\"10vh\",\n          backgroundPosition: \"center\"\n        }}></div> */}\n        <a href=\"https://github.com/klsolano7\"><img src={\"./images/github.png\"} className=\"firstIconPics\"/></a>\n        <a href=\"https://www.linkedin.com/in/kennethsolano/\"><img src={\"./images/linkedin-logo.png\"} className=\"firstIconPics\"/></a>\n            </div>\n          </div>\n          \n          <div class=\"container-fluid\">\n\t<div class=\"row\">\n\t\t<div class=\"col-md-4 mt-5\" >\n\t\t\t<div class=\"card\">\n\t\t\t\t<h5 class=\"card-header\">\n\t\t\t\t\tCard title\n\t\t\t\t</h5>\n\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t<p class=\"card-text\">\n\t\t\t\t\t\tCard content\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-footer\">\n\t\t\t\t\tCard footer\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-md-4 mt-5\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<h5 class=\"card-header\">\n\t\t\t\t\tCard title\n\t\t\t\t</h5>\n\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t<p class=\"card-text\">\n\t\t\t\t\t\tCard content\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-footer\">\n\t\t\t\t\tCard footer\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"col-md-4 mt-5\">\n\t\t\t<div class=\"card\">\n\t\t\t\t<h5 class=\"card-header\">\n\t\t\t\t\tCard title\n\t\t\t\t</h5>\n\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t<p class=\"card-text\">\n\t\t\t\t\t\tCard content\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"card-footer\">\n\t\t\t\t\tCard footer\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n          {/* <Container>\n\n  <Row>\n    <Col><div className=\"stackBox\">1 of 3</div></Col>\n    <Col><div className=\"stackBox\">2 of 3 </div></Col>\n    <Col><div className=\"stackBox\">3 of 3 </div></Col>\n  </Row>\n</Container> */}\n          {/* <div className=\"stack\">\n            <div className=\"stackBox\">+</div>\n            <div className=\"stackBox\">+</div>\n            <div className=\"stackBox\">+</div>\n          </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport Technologies from \"./Components/Technologies\"\nimport Typed from \"react-typed\";\n\nconst particlesOpt = {\n  particles: {\n    number: {\n      value: 250,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\n\n\n// var TxtType = function(el, toRotate, period) {\n//   this.toRotate = toRotate;\n//   this.el = el;\n//   this.loopNum = 0;\n//   this.period = parseInt(period, 10) || 1000;\n//   this.txt = \"\";\n//   this.tick();\n//   this.isDeleting = false;\n// };\n\n// TxtType.prototype.tick = function() {\n//   var i = this.loopNum % this.toRotate.length;\n//   var fullTxt = this.toRotate[i];\n\n//   if (this.isDeleting) {\n//     this.txt = fullTxt.substring(0, this.txt.length - 1);\n//   } else {\n//     this.txt = fullTxt.substring(0, this.txt.length + 1);\n//   }\n\n//   this.el.innerHTML = '<span class=\"wrap\">' + this.txt + \"</span>\";\n\n//   var that = this;\n//   var delta = 200 - Math.random() * 100;\n\n//   if (this.isDeleting) {\n//     delta /= 2;\n//   }\n\n//   if (!this.isDeleting && this.txt === fullTxt) {\n//     delta = this.period;\n//     this.isDeleting = true;\n//   } else if (this.isDeleting && this.txt === \"\") {\n//     this.isDeleting = false;\n//     this.loopNum++;\n//     delta = 500;\n//   }\n\n//   setTimeout(function() {\n//     that.tick();\n//   }, delta);\n// };\n\n// window.onload = function() {\n//   var elements = document.getElementsByClassName(\"typewrite\");\n//   for (var i = 0; i < elements.length; i++) {\n//     var toRotate = elements[i].getAttribute(\"data-type\");\n//     var period = elements[i].getAttribute(\"data-period\");\n//     if (toRotate) {\n//       new TxtType(elements[i], JSON.parse(toRotate), period);\n//     }\n//   }\n//   // INJECT CSS\n//   var css = document.createElement(\"style\");\n//   css.type = \"text/css\";\n//   css.innerHTML = \".typewrite > .wrap { border-right: 0.08em solid #fff}\";\n//   document.body.appendChild(css);\n// };\n\nfunction App() {\n  return (\n    <div>\n    <div className=\"mainContainer\">\n      <div className=\"navbar\">\n      <h1 style={{color:\"white\"}}>KS</h1>\n        {/* <img width=\"50px\" src={this.state.user.imageUrl} /> */}\n        <NavLink to=\"/dashboard\" exact>\n          Technologies\n        </NavLink>\n        <NavLink to=\"/searchevent\">Projects</NavLink>\n        <NavLink to=\"/signup\">Contact</NavLink>\n      </div>\n      <Particles params={particlesOpt} />\n\n\n        {/* <Particles\n        params={\n          particlesOpt\n        }\n      /> */}\n        {/* <h1 style={{display:\"flex\", justifyContent:\"center\", }}> \n  <a href=\"\" class=\"typewrite\" data-period=\"2000\" data-type='[ \"Hi, Im Ken.\", \"I am Creative.\", \"I Love Design.\", \"I Love to Develop.\" ]'>\n    <span class=\"wrap\"></span>\n  </a>\n</h1> */}\n       \n  \n\n      {/* <div\n        className=\"section1\"\n        style={{\n          backgroundImage: \"url(./images/image1.jpg)\",\n          backgroundSize: \"cover\",\n          height: \"100vh\",\n          width: \"100%\",\n          backgroundPosition: \"center\",\n          backgroundAttachment: \"fixed\"\n        }}\n      >\n        <div className=\"box1\">\n\n        </div>\n        <div className=\"box2\">\n          <h1 style={{ textAlign: \"center\", width: \"25vw\",color:\"white\" }}>Kenneth Solano</h1>\n        </div>\n        <div className=\"box3\">\n\n        </div>\n      </div>\n      <div\n        className=\"section2\"\n        style={{\n          backgroundImage: \"url(./images/batman.png)\",\n          backgroundSize: \"cover\",\n          height: \"100vh\",\n          width: \"100%\",\n          backgroundPosition: \"center\",\n          backgroundAttachment: \"fixed\"\n        }}\n      />\n      <div\n        className=\"section3\"\n        style={{\n          backgroundImage: \"url(./images/solanos.png)\",\n          backgroundSize: \"cover\",\n          height: \"100vh\",\n          width: \"100%\",\n          backgroundPosition: \"center\",\n          backgroundAttachment: \"fixed\"\n        }}\n      />\n      <div\n        className=\"section4\"\n        style={{\n          backgroundImage: \"url(./images/linkup.png)\",\n          backgroundSize: \"cover\",\n          height: \"129vh\",\n          width: \"100%\",\n          backgroundPosition: \"center\"\n        }}\n      />\n      <div className=\"about\">\n        <div className=\"about1\"><p style={{ textAlign: \"center\" }}>\n            At Ironhack I have been able to learn many languages which include:\n            javaScript, React.js, HTML, CSS, AJAX, Node.js, Handlebars,\n            Express.js, Mongodb. As I continue this journey I will keep on\n            inproving these languages and leanr much more.\n          </p></div>\n        <div className=\"about1\"><h1>About</h1></div>\n        <div className=\"about1\"><p style={{ textAlign: \"center\", width: \"25vw\",  }}>\n            Hey there! Thank you for visiting my page today! This is my\n            portfolio that contains my 3 projects I created at Ironhack Miami.\n            Also below you will see see links to my Github, LinkedIn, and\n            resume.\n          </p></div>\n\n        \n      </div>\n      <div className=\"bottomNav\" style={{backgroundColor:\"#191818b0\"}}>\n        <li>\n          <ul>\n            <a href=\"https://github.com/klsolano7\">\n              {\" \"}\n              <img\n                src=\"./images/git.svg\"\n                style={{\n                  height: \"12vh\",\n                  marginBottom: \"10%\",\n                  padding: \"8%\"\n                }}\n              />\n            </a>\n          </ul>\n          <ul><a href=\"https://www.linkedin.com/in/kennethsolano/\">\n              {\" \"}\n              <img\n                src=\"./images/linkedin.svg\"\n                style={{\n                  height: \"12vh\",\n                  marginBottom: \"10%\",\n                  padding: \"8%\"\n                }}\n              />\n            </a></ul>\n          <ul><a href=\"#\">\n              {\" \"}\n              <img\n                src=\"./images/resume.svg\"\n                style={{\n                  height: \"12vh\",\n                  marginBottom: \"10%\",\n                  padding: \"8%\"\n                }}\n              />\n            </a></ul>\n        </li>\n      </div> */}\n\n    </div>\n    <a href=\"Technologies\" ><div style={{display:\"flex\", justifyContent:\"center\", backgroundColor:\"black\",height:\"5vh\", alignItems:\"center\"}}>\n    <img src={\"./images/chevron.png\"} className=\"arrow\"/>\n    </div>\n    </a>\n\n\n<Technologies to={Technologies}/>\n{/* <h2>\n                  I am{\" \"}\n                  <Typed\n                    strings={[\"a developer\", \"a problem-solver\", \"a dog lover\"]}\n                    typeSpeed={120}\n                    backSpeed={75}\n                    backDelay={1000}\n                    // style={{ color: \"red\" }}\n                    loop\n                  />\n\n                </h2> */}\n\n    </div>\n  );\n}\n\nexport default App;\n\n{\n  /* <div className=\"bottomNav\">\n<NavLink className=\"bottomNavLinks\">\n  <ul>x</ul>\n  <ul>x</ul>\n  <ul>x</ul>\n</NavLink>\n\n</div> */\n}\n\n//continuing to work on project and studying react in Udemy\n\n\n// background-color: slategrey;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}